        -:    0:Source:print_tokens2_instrumented.c
        -:    0:Graph:print_tokens2_instrumented.gcno
        -:    0:Data:print_tokens2_instrumented.gcda
        -:    0:Runs:4115
        -:    1: 
        -:    2:#include <stdio.h>
        -:    3:#include <ctype.h>
        -:    4:#include <string.h>
        -:    5:#include "tokens.h"
        -:    6:#define TRUE 1
        -:    7:#define FALSE 0
        -:    8:
        -:    9:FILE* file_name = NULL;
        -:   10:
     4115:   11:main(argc,argv)
        -:   12:int argc;
        -:   13:char *argv[3];
        -:   14:{
     4115:   15:  file_name=fopen("v1.txt","a+"); 
     4115:   16:  if(!file_name)
        -:   17:  {	
    #####:   18:      printf("File could not be opened! \n");
    #####:   19:      fclose(file_name);
    #####:   20:      exit(0);
        -:   21:  }
        -:   22:
        -:   23:  char *fname;
        -:   24:  token tok;
        -:   25:  token_stream tp;
     4115:   26:  fprintf(file_name,"\nP1,");
     4115:   27:  if(argc==1)                  /* if not given filename,take as '""' */
        -:   28:  {
     2955:   29:    fprintf(file_name,"P2,");
     2955:   30:    fname= (char *) malloc(sizeof(char));
     2955:   31:    *fname = '\0';
        -:   32:  }
     1160:   33:  else if(argc==2)
        -:   34:  {
     1130:   35:    fprintf(file_name,"P3,");
     1130:   36:    fname= argv[1];
        -:   37:  }
        -:   38:  else
        -:   39:  { 
       30:   40:    fprintf(file_name,"P4,");
       30:   41:    fprintf(stdout, "Error!,please give the token stream\n");
       30:   42:    exit(0);
        -:   43:  }
     4085:   44:  tp=open_token_stream(fname);  /* open token stream */
     4055:   45:  tok=get_token(tp);
     4055:   46:  fprintf(file_name,"P5,");
    24059:   47:  while (is_eof_token(tok) ==FALSE) /* take one token each time until eof */
        -:   48:  {
    20004:   49:    fprintf(file_name,"P6,");
    20004:   50:    print_token(tok);
    20004:   51:    tok=get_token(tp);
        -:   52:  }
     4055:   53:  fprintf(file_name,"P7,");
     4055:   54:  print_token(tok); /* print eof signal */
     4055:   55:  exit(0);
        -:   56:}
        -:   57:
     4085:   58:character_stream open_character_stream(fname)
        -:   59:char *fname;
        -:   60:{ 
        -:   61:  character_stream fp;
     4085:   62:  fprintf(file_name,"P8,");
     4085:   63:  if(fname == NULL)
        -:   64:  {
     2955:   65:    fprintf(file_name,"P9,");
     2955:   66:    fp=stdin;
        -:   67:  }
     1130:   68:  else if ((fp=fopen(fname,"r"))== NULL)
        -:   69:  {
       30:   70:    fprintf(file_name,"P10,");
       30:   71:    fprintf(stdout, "The file %s doesn't exists\n",fname);
       30:   72:    exit(0);
        -:   73:  }
     4055:   74:  fprintf(file_name,"P11,");
     4055:   75:  return(fp);
        -:   76:}
        -:   77:
   158470:   78:char get_char(fp)
        -:   79:character_stream fp;
        -:   80:{
   158470:   81:  fprintf(file_name,"P12,");
        -:   82:  char ch;
   158470:   83:  ch=getc(fp);
   158470:   84:  return(ch);
        -:   85:}
        -:   86:
     3484:   87:char unget_char(ch,fp)
        -:   88:character_stream fp;
        -:   89:char ch;
        -:   90:{
        -:   91:  char c;
     3484:   92:  c=ungetc(ch,fp);
     3484:   93:  fprintf(file_name,"P13,");
     3484:   94:  if(c ==EOF)
        -:   95:  {
      747:   96:    fprintf(file_name,"P14,");
      747:   97:    return(c);
        -:   98:  }
        -:   99:  else
        -:  100:  {
     2737:  101:    fprintf(file_name,"P15,");
     2737:  102:    return(c);
        -:  103:  }
        -:  104:}
        -:  105:
        -:  106:char buffer[81];  /* fixed array length MONI */ /* to store the token temporar */
        -:  107:static int is_spec_symbol();
        -:  108:static int is_token_end();
        -:  109:static unget_error();
        -:  110:static int is_keyword();
        -:  111:static int is_identifier();
        -:  112:static int is_num_constant();
        -:  113:static int is_char_constant();
        -:  114:static int is_str_constant();
        -:  115:static int is_comment();
        -:  116:static void print_spec_symbol();
        -:  117:
     4085:  118:token_stream open_token_stream(fname)
        -:  119:char *fname;
        -:  120:{
        -:  121:  token_stream fp;
     4085:  122:  fprintf(file_name,"P16,");
     4085:  123:  if(strcmp(fname,"")==0)
        -:  124:  {
     2955:  125:    fprintf(file_name,"P17,");
     2955:  126:    fp=open_character_stream(NULL);
        -:  127:  }
        -:  128:  else
        -:  129:  {
     1130:  130:    fprintf(file_name,"P18,");
     1130:  131:    fp=open_character_stream(fname);
        -:  132:  }
     4055:  133:  fprintf(file_name,"P19,");
     4055:  134:  return(fp);
        -:  135:}
        -:  136:
    24059:  137:token get_token(tp)
        -:  138:token_stream tp;
        -:  139:{
    24059:  140:  int i=0,j;
    24059:  141:  int id=0;
        -:  142:  char ch,ch1[2];
    24059:  143:  fprintf(file_name,"P20,");
  1972838:  144:  for (j=0;j<=80;j++)          /* initial the buffer   */
        -:  145:  {
  1948779:  146:    fprintf(file_name,"P21,");
  1948779:  147:    buffer[j]='\0';
        -:  148:  }
    24059:  149:  ch1[0]='\0';
    24059:  150:  ch1[1]='\0';
    24059:  151:  ch=get_char(tp);
    24059:  152:  fprintf(file_name,"P22,");
    55911:  153:  while(ch==' '||ch=='\n')      /* strip all blanks until meet characters */
        -:  154:  {
    31852:  155:    fprintf(file_name,"P23,");
    31852:  156:    ch=get_char(tp);
        -:  157:  }
    24059:  158:  buffer[i]=ch;
    24059:  159:  fprintf(file_name,"P24,");
    24059:  160:  if(is_eof_token(buffer)==TRUE)
        -:  161:  {
     4055:  162:    fprintf(file_name,"P25,");
     4055:  163:    return(buffer);
        -:  164:  }
    20004:  165:  fprintf(file_name,"P26,");
    20004:  166:  if(is_spec_symbol(buffer)==TRUE)
        -:  167:  {
     5236:  168:    fprintf(file_name,"P27,");
     5236:  169:    return(buffer); 
        -:  170:  }
    14768:  171:  fprintf(file_name,"P28,");
    14768:  172:  if(ch =='"')
        -:  173:  {
     1595:  174:    fprintf(file_name,"P29,");
     1595:  175:    id=1;    /* prepare for string */
        -:  176:  }
    14768:  177:  fprintf(file_name,"P30,");
    14768:  178:  if(ch ==59)
        -:  179:  {
     1660:  180:    fprintf(file_name,"P31,");
     1660:  181:    id=2;    /* prepare for comment */
        -:  182:  }
    14768:  183:  ch=get_char(tp);
    14768:  184:  fprintf(file_name,"P32,");
   102559:  185:  while (is_token_end(id,ch) == FALSE)/* until meet the end character */
        -:  186:  {
    87791:  187:    fprintf(file_name,"P33,");
    87791:  188:    i++;
    87791:  189:    buffer[i]=ch;
    87791:  190:    ch=get_char(tp);
        -:  191:  }
    14768:  192:  ch1[0]=ch;                        /* hold the end charcater          */
    14768:  193:  fprintf(file_name,"P34,");
    14768:  194:  if(is_eof_token(ch1)==TRUE)       /* if end character is eof token    */
        -:  195:  {
      747:  196:    ch=unget_char(ch,tp);        /* then put back eof on token_stream */
      747:  197:    fprintf(file_name,"P35,");
      747:  198:    if(ch==EOF)
        -:  199:    {
      747:  200:      fprintf(file_name,"P36,");
      747:  201:      unget_error(tp);
        -:  202:    }
      747:  203:    fprintf(file_name,"P37,");
      747:  204:    return(buffer);
        -:  205:  }
    14021:  206:  fprintf(file_name,"P38,");
    14021:  207:  if(is_spec_symbol(ch1)==TRUE)     /* if end character is special_symbol */
        -:  208:  {
     2737:  209:    ch=unget_char(ch,tp);        /* then put back this character       */
     2737:  210:    fprintf(file_name,"P39,"); 
     2737:  211:    if(ch==EOF)
        -:  212:    {
    #####:  213:      fprintf(file_name,"P40,");
    #####:  214:      unget_error(tp);
        -:  215:    }
     2737:  216:    fprintf(file_name,"P41,");
     2737:  217:    return(buffer);
        -:  218:  }
    11284:  219:  fprintf(file_name,"P42,");
    11284:  220:  if(id==1)                  /* if end character is " and is string */
        -:  221:  { 
     1559:  222:    fprintf(file_name,"P43,");
     1559:  223:    i++;                     /* case,hold the second " in buffer    */
     1559:  224:    buffer[i]=ch;
     1559:  225:    return(buffer); 
        -:  226:  }
     9725:  227:  fprintf(file_name,"P44,");
     9725:  228:  return(buffer);                   /* return nomal case token             */
        -:  229:}
        -:  230:
   102559:  231:static int is_token_end(str_com_id,ch)
        -:  232:char ch;
        -:  233:int str_com_id;
        -:  234:{
        -:  235:  char ch1[2];  /* fixed array declaration MONI */
   102559:  236:  ch1[0]=ch;
   102559:  237:  ch1[1]='\0';
   102559:  238:  fprintf(file_name,"P49,");
   102559:  239:  if(is_eof_token(ch1)==TRUE)
        -:  240:  {
      747:  241:    fprintf(file_name,"P50,");
      747:  242:    return(TRUE); /* is eof token? */
        -:  243:  }
   101812:  244:  fprintf(file_name,"P51,");
   101812:  245:  if(str_com_id==1)          /* is string token */
        -:  246:  {
    21921:  247:    fprintf(file_name,"P52,"); 
    21921:  248:    if(ch=='"' | ch=='\n')   /* for string until meet another " */
        -:  249:    {
     1559:  250:      fprintf(file_name,"P53,");
     1559:  251:      return(TRUE);
        -:  252:    }  
        -:  253:    else
        -:  254:    {
    20362:  255:      fprintf(file_name,"P54,");
    20362:  256:      return(FALSE);
        -:  257:    }  
        -:  258:  }
    79891:  259:  fprintf(file_name,"P55,");
    79891:  260:  if(str_com_id==2)    /* is comment token */
        -:  261:  { 
    12222:  262:    fprintf(file_name,"P56,");
    12222:  263:    if(ch=='\n')     /* for comment until meet end of line */
        -:  264:    {
     1654:  265:      fprintf(file_name,"P57,");
     1654:  266:      return(TRUE);
        -:  267:    }
        -:  268:    else
        -:  269:    {
    10568:  270:      fprintf(file_name,"P58,");
    10568:  271:      return(FALSE);
        -:  272:    }
        -:  273:  }
    67669:  274:  fprintf(file_name,"P59,");
    67669:  275:  if(is_spec_symbol(ch1)==TRUE)
        -:  276:  {
     2737:  277:    fprintf(file_name,"P60,");
     2737:  278:    return(TRUE); /* is special_symbol? */
        -:  279:  }
    64932:  280:  fprintf(file_name,"P61,");
    64932:  281:  if(ch ==' ' || ch=='\n' || ch==59) 
        -:  282:  {
     8071:  283:    fprintf(file_name,"P62,");
     8071:  284:    return(TRUE); 
        -:  285:  }
    56861:  286:  fprintf(file_name,"P63,");
    56861:  287:  return(FALSE);               
        -:  288:}
        -:  289:
    24059:  290:static int token_type(tok)
        -:  291:token tok;
        -:  292:{
    24059:  293:  fprintf(file_name,"P64,");
    24059:  294:  if(is_keyword(tok))
        -:  295:  {
     2357:  296:    fprintf(file_name,"P65,");
     2357:  297:    return(keyword);
        -:  298:  }
    21702:  299:  fprintf(file_name,"P66,");
    21702:  300:  if(is_spec_symbol(tok))
        -:  301:  {
     5236:  302:    fprintf(file_name,"P67,");
     5236:  303:    return(spec_symbol);
        -:  304:  }
    16466:  305:  fprintf(file_name,"P68,");
    16466:  306:  if(is_identifier(tok))
        -:  307:  {
     2908:  308:    fprintf(file_name,"P69,");
     2908:  309:    return(identifier);
        -:  310:  }
    13558:  311:  fprintf(file_name,"P70,");
    13558:  312:  if(is_num_constant(tok))
        -:  313:  {
     1279:  314:    fprintf(file_name,"P71,");
     1279:  315:    return(num_constant);
        -:  316:  }
    12279:  317:  fprintf(file_name,"P72,");
    12279:  318:  if(is_str_constant(tok))
        -:  319:  {
     1408:  320:    fprintf(file_name,"P73,");
     1408:  321:    return(str_constant);
        -:  322:  }
    10871:  323:  fprintf(file_name,"P74,");
    10871:  324:  if(is_char_constant(tok))
        -:  325:  {
      559:  326:    fprintf(file_name,"P75,");
      559:  327:    return(char_constant);
        -:  328:  }
    10312:  329:  fprintf(file_name,"P76,");
    10312:  330:  if(is_comment(tok))
        -:  331:  {
     1660:  332:    fprintf(file_name,"P77,");
     1660:  333:    return(comment);
        -:  334:  }
     8652:  335:  fprintf(file_name,"P78,");
     8652:  336:  if(is_eof_token(tok))
        -:  337:  {
     4055:  338:    fprintf(file_name,"P79,");
     4055:  339:    return(end);
        -:  340:  }
     4597:  341:  fprintf(file_name,"P80,");
     4597:  342:  return(error);
        -:  343:}
        -:  344:
        -:  345:
    24059:  346:int print_token(tok)
        -:  347:token tok;
        -:  348:{
        -:  349:  int type;
    24059:  350:  type=token_type(tok);
    24059:  351:  fprintf(file_name,"P81,");
    24059:  352:  if(type==error)
        -:  353:  {
     4597:  354:    fprintf(file_name,"P82,");
     4597:  355:    fprintf(stdout, "error,\"%s\".\n",tok);
        -:  356:  }
    24059:  357:  fprintf(file_name,"P83,");
    24059:  358:  if(type==keyword)
        -:  359:  {
     2357:  360:    fprintf(file_name,"P84,");
     2357:  361:    fprintf(stdout, "keyword,\"%s\".\n",tok);
        -:  362:  }
    24059:  363:  fprintf(file_name,"P85,");
    24059:  364:  if(type==spec_symbol)
        -:  365:  {
     5236:  366:    fprintf(file_name,"P86,");
     5236:  367:    print_spec_symbol(tok);
        -:  368:  }
    24059:  369:  fprintf(file_name,"P87,");
    24059:  370:  if(type==identifier)
        -:  371:  {
     2908:  372:    fprintf(file_name,"P88,");
     2908:  373:    fprintf(stdout, "identifier,\"%s\".\n",tok);
        -:  374:  }
    24059:  375:  fprintf(file_name,"P89,");
    24059:  376:  if(type==num_constant)
        -:  377:  {
     1279:  378:    fprintf(file_name,"P90,");
     1279:  379:    fprintf(stdout, "numeric,%s.\n",tok);
        -:  380:  }
    24059:  381:  fprintf(file_name,"P91,");
    24059:  382:  if(type==str_constant)
        -:  383:  {
     1408:  384:    fprintf(file_name,"P92,");
     1408:  385:    fprintf(stdout, "string,%s.\n",tok);
        -:  386:  }
    24059:  387:  fprintf(file_name,"P93,");
    24059:  388:  if(type==char_constant)
        -:  389:  {
      559:  390:    fprintf(file_name,"P94,");
      559:  391:    tok=tok+1;
      559:  392:    fprintf(stdout, "character,\"%s\".\n",tok);
        -:  393:  }
    24059:  394:  fprintf(file_name,"P95,");
    24059:  395:  if(type==end)
        -:  396:  {
     4055:  397:    fprintf(file_name,"P96,");
     4055:  398:    fprintf(stdout, "eof.\n");
        -:  399:  }
    24059:  400:}
        -:  401:
   174097:  402:int is_eof_token(tok)
        -:  403:token tok;
        -:  404:{ 
   174097:  405:  fprintf(file_name,"P97,");
   174097:  406:  if( *tok==EOF)
        -:  407:  {
    13659:  408:    fprintf(file_name,"P98,");
    13659:  409:    return(TRUE);  
        -:  410:  }
        -:  411:  else
        -:  412:  {
   160438:  413:    fprintf(file_name,"P99,");
   160438:  414:    return(FALSE);
        -:  415:  }
        -:  416:}
        -:  417:
    10312:  418:static int is_comment(ident)
        -:  419:token ident;
        -:  420:{
    10312:  421:  fprintf(file_name,"P100,");
    10312:  422:  if( (*ident) ==59 )   /* the char is 59   */
        -:  423:  {
     1660:  424:    fprintf(file_name,"P101,");
     1660:  425:    return(TRUE);
        -:  426:  }
        -:  427:  else
        -:  428:  {
     8652:  429:    fprintf(file_name,"P102,");
     8652:  430:    return(FALSE);
        -:  431:  }
        -:  432:}
        -:  433:
    24059:  434:static int is_keyword(str)
        -:  435:    token  str;
        -:  436:{ 
    24059:  437:  fprintf(file_name,"P103,");
    24059:  438:  if (!strcmp(str,"and") || !strcmp(str,"or") || !strcmp(str,"if") || 
    22906:  439:  	  !strcmp(str,"xor")||!strcmp(str,"lambda")||!strcmp(str,"=>"))
        -:  440:  {
     2357:  441:    fprintf(file_name,"P104,");
     2357:  442:    return(TRUE);
        -:  443:  }
        -:  444:  else
        -:  445:  {
    21702:  446:    fprintf(file_name,"P105,");
    21702:  447:    return(FALSE);
        -:  448:  }
        -:  449:}
        -:  450:
    10871:  451:static int is_char_constant(str)
        -:  452:    token str;
        -:  453:{
    10871:  454:  fprintf(file_name,"P106,");
    10871:  455:  if ((*str)=='#' && isalpha(*(str+1)))
        -:  456:  {
      559:  457:    fprintf(file_name,"P107,");
      559:  458:    return(TRUE);
        -:  459:  } 
        -:  460:  else
        -:  461:  {
    10312:  462:    fprintf(file_name,"P108,");
    10312:  463:    return(FALSE);
        -:  464:  }
        -:  465:}
        -:  466:
    13558:  467:static int is_num_constant(str)
        -:  468:    token  str;
        -:  469:{
    13558:  470:  int i=1;
    13558:  471:  fprintf(file_name,"P109,");
    13558:  472:  if ( isdigit(*str)) 
        -:  473:  {
     1721:  474:    fprintf(file_name,"P110,");
     2662:  475:    while ( *(str+i) != '\0' )   /* until meet token end sign */
        -:  476:    {
     1383:  477:      fprintf(file_name,"P111,");
     1383:  478:      if(isdigit(*(str+i)))
        -:  479:      {
      941:  480:        fprintf(file_name,"P112,");
      941:  481:        i++;
        -:  482:      }
        -:  483:      else
        -:  484:      {
      442:  485:        fprintf(file_name,"P113,");
      442:  486:        return(FALSE);
        -:  487:      }
        -:  488:    }                         /* end WHILE */
     1279:  489:    fprintf(file_name,"P114,");
     1279:  490:    return(TRUE);
        -:  491:  }
        -:  492:  else
        -:  493:  {
    11837:  494:    fprintf(file_name,"P115,");
    11837:  495:    return(FALSE);               /* other return FALSE */
        -:  496:  }
        -:  497:}
        -:  498:
    12279:  499:static int is_str_constant(str)
        -:  500:    token str;
        -:  501:{
    12279:  502:  int i=1;
    12279:  503:  fprintf(file_name,"P116,");
    12279:  504:  if ( *str =='"')
        -:  505:  {
     1595:  506:    fprintf(file_name,"P117,"); 
    22108:  507:    while (*(str+i)!='\0')  /* until meet the token end sign */
        -:  508:    {
    21921:  509:      fprintf(file_name,"P118,");
    21921:  510:      if(*(str+i)=='"')
        -:  511:      {
     1408:  512:        fprintf(file_name,"P119,");
     1408:  513:        return(TRUE);        /* meet the second '"'           */
        -:  514:      }
        -:  515:      else
        -:  516:      {
    20513:  517:        fprintf(file_name,"P120,");
    20513:  518:        i++;
        -:  519:      }     
        -:  520:    }               /* end WHILE */
      187:  521:    fprintf(file_name,"P121,");
      187:  522:    return(FALSE);
        -:  523:  }
        -:  524:  else
        -:  525:  {
    10684:  526:    fprintf(file_name,"P122,");
    10684:  527:    return(FALSE);       /* other return FALSE */
        -:  528:  }
        -:  529:}
        -:  530:
    16466:  531:static int is_identifier(str)
        -:  532:    token  str;
        -:  533:{
    16466:  534:  int i=1;
    16466:  535:  fprintf(file_name,"P123,");
    16466:  536:  if ( isalpha( *str) ) 
        -:  537:  {
     4812:  538:    fprintf(file_name,"P124,");
    23414:  539:    while(  *(str+i) !='\0' )   /* unti meet the end token sign */
        -:  540:    {
    20506:  541:      fprintf(file_name,"P125,");
    20506:  542:      if(isalpha(*(str+i)) || isdigit(*(str+i)))
        -:  543:      {
    18602:  544:        fprintf(file_name,"P126,");
    18602:  545:        i++;
        -:  546:      } 
        -:  547:      else
        -:  548:      {
     1904:  549:        fprintf(file_name,"P127,");
     1904:  550:        return(FALSE);
        -:  551:      }
        -:  552:    }      /* end WHILE */
     2908:  553:    fprintf(file_name,"P128,");
     2908:  554:    return(TRUE);
        -:  555:  }
        -:  556:  else
        -:  557:  {
    11654:  558:    fprintf(file_name,"P129,");
    11654:  559:    return(FALSE);
        -:  560:  }
        -:  561:}
        -:  562:
      747:  563:static unget_error(fp)
        -:  564:character_stream *fp;
        -:  565:{
      747:  566:  fprintf(file_name,"P130,");
      747:  567:  fprintf(stdout,"It can not get charcter\n");
      747:  568:}
        -:  569:
     5236:  570:static void print_spec_symbol(str)
        -:  571:token str;
        -:  572:{
     5236:  573:  fprintf(file_name,"P131,");
     5236:  574:  if (!strcmp(str,"("))
        -:  575:  {
      703:  576:    fprintf(file_name,"P132,");
      703:  577:    fprintf(stdout, "%s\n","lparen.");
      703:  578:    return;
        -:  579:  }
     4533:  580:  fprintf(file_name,"P133,"); 
     4533:  581:  if (!strcmp(str,")"))
        -:  582:  {
      763:  583:    fprintf(file_name,"P134,");
      763:  584:    fprintf(stdout, "%s\n","rparen.");
      763:  585:    return;
        -:  586:  }
     3770:  587:  fprintf(file_name,"P135,");
     3770:  588:  if (!strcmp(str,"["))
        -:  589:  {
      740:  590:    fprintf(file_name,"P136,");
      740:  591:    fprintf(stdout, "%s\n","lsquare.");
      740:  592:    return;
        -:  593:  }
     3030:  594:  fprintf(file_name,"P137,");
     3030:  595:  if (!strcmp(str,"]"))
        -:  596:  {
      803:  597:    fprintf(file_name,"P138,");
      803:  598:    fprintf(stdout, "%s\n","rsquare.");
      803:  599:    return;
        -:  600:  }
     2227:  601:  fprintf(file_name,"P139,");
     2227:  602:  if (!strcmp(str,"'"))
        -:  603:  {
      731:  604:    fprintf(file_name,"P140,");
      731:  605:    fprintf(stdout, "%s\n","quote.");
      731:  606:    return;
        -:  607:  }
     1496:  608:  fprintf(file_name,"P141,");
     1496:  609:  if (!strcmp(str,"`"))
        -:  610:  {
      768:  611:    fprintf(file_name,"P142,");
      768:  612:    fprintf(stdout, "%s\n","bquote.");
      768:  613:    return;
        -:  614:  }
      728:  615:  fprintf(file_name,"P143,");
      728:  616:  fprintf(stdout, "%s\n","comma.");
        -:  617:}
        -:  618:
   123396:  619:static int is_spec_symbol(str)
        -:  620:    token str;
        -:  621:{
   123396:  622:  fprintf(file_name,"P144,");
   123396:  623:  if (!strcmp(str,"("))
        -:  624:  {
     2130:  625:    fprintf(file_name,"P145,");  
     2130:  626:    return(TRUE);
        -:  627:  }
   121266:  628:  fprintf(file_name,"P146,");
   121266:  629:  if (!strcmp(str,")"))
        -:  630:  {
     2302:  631:    fprintf(file_name,"P147,");
     2302:  632:    return(TRUE);
        -:  633:  }
   118964:  634:  fprintf(file_name,"P148,");
   118964:  635:  if (!strcmp(str,"["))
        -:  636:  {
     2270:  637:    fprintf(file_name,"P149,");
     2270:  638:    return(TRUE);
        -:  639:  }
   116694:  640:  fprintf(file_name,"P150,");
   116694:  641:  if (!strcmp(str,"]"))
        -:  642:  {
     2438:  643:    fprintf(file_name,"P151,");
     2438:  644:    return(TRUE);
        -:  645:  }
   114256:  646:  fprintf(file_name,"P152,");
   114256:  647:  if (!strcmp(str,"'"))
        -:  648:  {
     2226:  649:    fprintf(file_name,"P153,");
     2226:  650:    return(TRUE);
        -:  651:  }
   112030:  652:  fprintf(file_name,"P154,");
   112030:  653:  if (!strcmp(str,"`"))
        -:  654:  {
     2334:  655:    fprintf(file_name,"P155,");
     2334:  656:    return(TRUE);
        -:  657:  }
   109696:  658:  fprintf(file_name,"P156,");
   109696:  659:  if (!strcmp(str,","))
        -:  660:  {
     2246:  661:    fprintf(file_name,"P157,");
     2246:  662:    return(TRUE);
        -:  663:  }
   107450:  664:  fprintf(file_name,"P158,");
   107450:  665:  return(FALSE);     /* others return FALSE */
        -:  666:}
