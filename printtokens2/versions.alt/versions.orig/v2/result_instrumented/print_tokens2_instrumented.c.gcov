        -:    0:Source:print_tokens2_instrumented.c
        -:    0:Graph:print_tokens2_instrumented.gcno
        -:    0:Data:print_tokens2_instrumented.gcda
        -:    0:Runs:4115
        -:    1: 
        -:    2:#include <stdio.h>
        -:    3:#include <ctype.h>
        -:    4:#include <string.h>
        -:    5:#include "tokens.h"
        -:    6:#define TRUE 1
        -:    7:#define FALSE 0
        -:    8:
        -:    9:FILE* file_name = NULL;
        -:   10:
     4115:   11:main(argc,argv)
        -:   12:int argc;
        -:   13:char *argv[3];
        -:   14:{
     4115:   15:  file_name=fopen("v2.txt","a+"); 
     4115:   16:  if(!file_name)
        -:   17:  {	
    #####:   18:      printf("File could not be opened! \n");
    #####:   19:      fclose(file_name);
    #####:   20:      exit(0);
        -:   21:  }
        -:   22:
        -:   23:  char *fname;
        -:   24:  token tok;
        -:   25:  token_stream tp;
     4115:   26:  fprintf(file_name,"\nP1,");
     4115:   27:  if(argc==1)                  /* if not given filename,take as '""' */
        -:   28:  {
     2955:   29:    fprintf(file_name,"P2,");
     2955:   30:    fname= (char *) malloc(sizeof(char));
     2955:   31:    *fname = '\0';
        -:   32:  }
     1160:   33:  else if(argc==2)
        -:   34:  {
     1130:   35:    fprintf(file_name,"P3,");
     1130:   36:    fname= argv[1];
        -:   37:  }
        -:   38:  else
        -:   39:  { 
       30:   40:    fprintf(file_name,"P4,");
       30:   41:    fprintf(stdout, "Error!,please give the token stream\n");
       30:   42:    exit(0);
        -:   43:  }
     4085:   44:  tp=open_token_stream(fname);  /* open token stream */
     4055:   45:  tok=get_token(tp);
     4055:   46:  fprintf(file_name,"P5,");
    23151:   47:  while (is_eof_token(tok) ==FALSE) /* take one token each time until eof */
        -:   48:  {
    19096:   49:    fprintf(file_name,"P6,");
    19096:   50:    print_token(tok);
    19096:   51:    tok=get_token(tp);
        -:   52:  }
     4055:   53:  fprintf(file_name,"P7,");
     4055:   54:  print_token(tok); /* print eof signal */
     4055:   55:  exit(0);
        -:   56:}
        -:   57:
     4085:   58:character_stream open_character_stream(fname)
        -:   59:char *fname;
        -:   60:{ 
        -:   61:  character_stream fp;
     4085:   62:  fprintf(file_name,"P8,");
     4085:   63:  if(fname == NULL)
        -:   64:  {
     2955:   65:    fprintf(file_name,"P9,");
     2955:   66:    fp=stdin;
        -:   67:  }
     1130:   68:  else if ((fp=fopen(fname,"r"))== NULL)
        -:   69:  {
       30:   70:    fprintf(file_name,"P10,");
       30:   71:    fprintf(stdout, "The file %s doesn't exists\n",fname);
       30:   72:    exit(0);
        -:   73:  }
     4055:   74:  fprintf(file_name,"P11,");
     4055:   75:  return(fp);
        -:   76:}
        -:   77:
   158391:   78:char get_char(fp)
        -:   79:character_stream fp;
        -:   80:{
   158391:   81:  fprintf(file_name,"P12,");
        -:   82:  char ch;
   158391:   83:  ch=getc(fp);
   158391:   84:  return(ch);
        -:   85:}
        -:   86:
     3405:   87:char unget_char(ch,fp)
        -:   88:character_stream fp;
        -:   89:char ch;
        -:   90:{
        -:   91:  char c;
     3405:   92:  c=ungetc(ch,fp);
     3405:   93:  fprintf(file_name,"P13,");
     3405:   94:  if(c ==EOF)
        -:   95:  {
      759:   96:    fprintf(file_name,"P14,");
      759:   97:    return(c);
        -:   98:  }
        -:   99:  else
        -:  100:  {
     2646:  101:    fprintf(file_name,"P15,");
     2646:  102:    return(c);
        -:  103:  }
        -:  104:}
        -:  105:
        -:  106:char buffer[81];  /* fixed array length MONI */ /* to store the token temporar */
        -:  107:static int is_spec_symbol();
        -:  108:static int is_token_end();
        -:  109:static unget_error();
        -:  110:static int is_keyword();
        -:  111:static int is_identifier();
        -:  112:static int is_num_constant();
        -:  113:static int is_char_constant();
        -:  114:static int is_str_constant();
        -:  115:static int is_comment();
        -:  116:static void print_spec_symbol();
        -:  117:
     4085:  118:token_stream open_token_stream(fname)
        -:  119:char *fname;
        -:  120:{
        -:  121:  token_stream fp;
     4085:  122:  fprintf(file_name,"P16,");
     4085:  123:  if(strcmp(fname,"")==0)
        -:  124:  {
     2955:  125:    fprintf(file_name,"P17,");
     2955:  126:    fp=open_character_stream(NULL);
        -:  127:  }
        -:  128:  else
        -:  129:  {
     1130:  130:    fprintf(file_name,"P18,");
     1130:  131:    fp=open_character_stream(fname);
        -:  132:  }
     4055:  133:  fprintf(file_name,"P19,");
     4055:  134:  return(fp);
        -:  135:}
        -:  136:
    23151:  137:token get_token(tp)
        -:  138:token_stream tp;
        -:  139:{
    23151:  140:  int i=0,j;
    23151:  141:  int id=0;
        -:  142:  char ch,ch1[2];
    23151:  143:  fprintf(file_name,"P20,");
  1898382:  144:  for (j=0;j<=80;j++)          /* initial the buffer   */
        -:  145:  {
  1875231:  146:    fprintf(file_name,"P21,");
  1875231:  147:    buffer[j]='\0';
        -:  148:  }
    23151:  149:  ch1[0]='\0';
    23151:  150:  ch1[1]='\0';
    23151:  151:  ch=get_char(tp);
    23151:  152:  fprintf(file_name,"P22,");
    54915:  153:  while(ch==' '||ch=='\n')      /* strip all blanks until meet characters */
        -:  154:  {
    31764:  155:    fprintf(file_name,"P23,");
    31764:  156:    ch=get_char(tp);
        -:  157:  }
    23151:  158:  buffer[i]=ch;
    23151:  159:  fprintf(file_name,"P24,");
    23151:  160:  if(is_eof_token(buffer)==TRUE)
        -:  161:  {
     4055:  162:    fprintf(file_name,"P25,");
     4055:  163:    return(buffer);
        -:  164:  }
    19096:  165:  fprintf(file_name,"P26,");
    19096:  166:  if(is_spec_symbol(buffer)==TRUE)
        -:  167:  {
     4804:  168:    fprintf(file_name,"P27,");
     4804:  169:    return(buffer); 
        -:  170:  }
    14292:  171:  fprintf(file_name,"P28,");
    14292:  172:  if(ch =='"')
        -:  173:  {
     1563:  174:    fprintf(file_name,"P29,");
     1563:  175:    id=1;    /* prepare for string */
        -:  176:  }
    14292:  177:  fprintf(file_name,"P30,");
    14292:  178:  if(ch ==59)
        -:  179:  {
     1922:  180:    fprintf(file_name,"P31,");
     1922:  181:    id=2;    /* prepare for comment */
        -:  182:  }
    14292:  183:  ch=get_char(tp);
    14292:  184:  fprintf(file_name,"P32,");
   103476:  185:  while (is_token_end(id,ch) == FALSE)/* until meet the end character */
        -:  186:  {
    89184:  187:    fprintf(file_name,"P33,");
    89184:  188:    i++;
    89184:  189:    buffer[i]=ch;
    89184:  190:    ch=get_char(tp);
        -:  191:  }
    14292:  192:  ch1[0]=ch;                        /* hold the end charcater          */
    14292:  193:  fprintf(file_name,"P34,");
    14292:  194:  if(is_eof_token(ch1)==TRUE)       /* if end character is eof token    */
        -:  195:  {
      759:  196:    ch=unget_char(ch,tp);        /* then put back eof on token_stream */
      759:  197:    fprintf(file_name,"P35,");
      759:  198:    if(ch==EOF)
        -:  199:    {
      759:  200:      fprintf(file_name,"P36,");
      759:  201:      unget_error(tp);
        -:  202:    }
      759:  203:    fprintf(file_name,"P37,");
      759:  204:    return(buffer);
        -:  205:  }
    13533:  206:  fprintf(file_name,"P38,");
    13533:  207:  if(is_spec_symbol(ch1)==TRUE)     /* if end character is special_symbol */
        -:  208:  {
     2375:  209:    ch=unget_char(ch,tp);        /* then put back this character       */
     2375:  210:    fprintf(file_name,"P39,"); 
     2375:  211:    if(ch==EOF)
        -:  212:    {
    #####:  213:      fprintf(file_name,"P40,");
    #####:  214:      unget_error(tp);
        -:  215:    }
     2375:  216:    fprintf(file_name,"P41,");
     2375:  217:    return(buffer);
        -:  218:  }
    11158:  219:  fprintf(file_name,"P42,");
    11158:  220:  if(id==1)                  /* if end character is " and is string */
        -:  221:  { 
     1530:  222:    fprintf(file_name,"P43,");
     1530:  223:    i++;                     /* case,hold the second " in buffer    */
     1530:  224:    buffer[i]=ch;
     1530:  225:    return(buffer); 
        -:  226:  }
     9628:  227:  fprintf(file_name,"P44,");
     9628:  228:  if(id==0 && ch==59)
        -:  229:  { 
      271:  230:    ch=unget_char(ch,tp);       /* then put back this character         */
      271:  231:    fprintf(file_name,"P45,");
        -:  232:/*  if(ch==EOF)        */
      271:  233:	  unget_error(tp);
      271:  234:    return(buffer); 
        -:  235:  }
     9357:  236:  fprintf(file_name,"P48,");
     9357:  237:  return(buffer);                   /* return nomal case token             */
        -:  238:}
        -:  239:
   103476:  240:static int is_token_end(str_com_id,ch)
        -:  241:char ch;
        -:  242:int str_com_id;
        -:  243:{
        -:  244:  char ch1[2];  /* fixed array declaration MONI */
   103476:  245:  ch1[0]=ch;
   103476:  246:  ch1[1]='\0';
   103476:  247:  fprintf(file_name,"P49,");
   103476:  248:  if(is_eof_token(ch1)==TRUE)
        -:  249:  {
      759:  250:    fprintf(file_name,"P50,");
      759:  251:    return(TRUE); /* is eof token? */
        -:  252:  }
   102717:  253:  fprintf(file_name,"P51,");
   102717:  254:  if(str_com_id==1)          /* is string token */
        -:  255:  {
    21503:  256:    fprintf(file_name,"P52,"); 
    21503:  257:    if(ch=='"' | ch=='\n')   /* for string until meet another " */
        -:  258:    {
     1530:  259:      fprintf(file_name,"P53,");
     1530:  260:      return(TRUE);
        -:  261:    }  
        -:  262:    else
        -:  263:    {
    19973:  264:      fprintf(file_name,"P54,");
    19973:  265:      return(FALSE);
        -:  266:    }  
        -:  267:  }
    81214:  268:  fprintf(file_name,"P55,");
    81214:  269:  if(str_com_id==2)    /* is comment token */
        -:  270:  { 
    19215:  271:    fprintf(file_name,"P56,");
    19215:  272:    if(ch=='\n')     /* for comment until meet end of line */
        -:  273:    {
     1876:  274:      fprintf(file_name,"P57,");
     1876:  275:      return(TRUE);
        -:  276:    }
        -:  277:    else
        -:  278:    {
    17339:  279:      fprintf(file_name,"P58,");
    17339:  280:      return(FALSE);
        -:  281:    }
        -:  282:  }
    61999:  283:  fprintf(file_name,"P59,");
    61999:  284:  if(is_spec_symbol(ch1)==TRUE)
        -:  285:  {
     2375:  286:    fprintf(file_name,"P60,");
     2375:  287:    return(TRUE); /* is special_symbol? */
        -:  288:  }
    59624:  289:  fprintf(file_name,"P61,");
    59624:  290:  if(ch ==' ' || ch=='\n' || ch==59) 
        -:  291:  {
     7752:  292:    fprintf(file_name,"P62,");
     7752:  293:    return(TRUE); 
        -:  294:  }
    51872:  295:  fprintf(file_name,"P63,");
    51872:  296:  return(FALSE);               
        -:  297:}
        -:  298:
    23151:  299:static int token_type(tok)
        -:  300:token tok;
        -:  301:{
    23151:  302:  fprintf(file_name,"P64,");
    23151:  303:  if(is_keyword(tok))
        -:  304:  {
     2337:  305:    fprintf(file_name,"P65,");
     2337:  306:    return(keyword);
        -:  307:  }
    20814:  308:  fprintf(file_name,"P66,");
    20814:  309:  if(is_spec_symbol(tok))
        -:  310:  {
     4804:  311:    fprintf(file_name,"P67,");
     4804:  312:    return(spec_symbol);
        -:  313:  }
    16010:  314:  fprintf(file_name,"P68,");
    16010:  315:  if(is_identifier(tok))
        -:  316:  {
     2786:  317:    fprintf(file_name,"P69,");
     2786:  318:    return(identifier);
        -:  319:  }
    13224:  320:  fprintf(file_name,"P70,");
    13224:  321:  if(is_num_constant(tok))
        -:  322:  {
     1253:  323:    fprintf(file_name,"P71,");
     1253:  324:    return(num_constant);
        -:  325:  }
    11971:  326:  fprintf(file_name,"P72,");
    11971:  327:  if(is_str_constant(tok))
        -:  328:  {
     1388:  329:    fprintf(file_name,"P73,");
     1388:  330:    return(str_constant);
        -:  331:  }
    10583:  332:  fprintf(file_name,"P74,");
    10583:  333:  if(is_char_constant(tok))
        -:  334:  {
      553:  335:    fprintf(file_name,"P75,");
      553:  336:    return(char_constant);
        -:  337:  }
    10030:  338:  fprintf(file_name,"P76,");
    10030:  339:  if(is_comment(tok))
        -:  340:  {
     1922:  341:    fprintf(file_name,"P77,");
     1922:  342:    return(comment);
        -:  343:  }
     8108:  344:  fprintf(file_name,"P78,");
     8108:  345:  if(is_eof_token(tok))
        -:  346:  {
     4055:  347:    fprintf(file_name,"P79,");
     4055:  348:    return(end);
        -:  349:  }
     4053:  350:  fprintf(file_name,"P80,");
     4053:  351:  return(error);
        -:  352:}
        -:  353:
        -:  354:
    23151:  355:int print_token(tok)
        -:  356:token tok;
        -:  357:{
        -:  358:  int type;
    23151:  359:  type=token_type(tok);
    23151:  360:  fprintf(file_name,"P81,");
    23151:  361:  if(type==error)
        -:  362:  {
     4053:  363:    fprintf(file_name,"P82,");
     4053:  364:    fprintf(stdout, "error,\"%s\".\n",tok);
        -:  365:  }
    23151:  366:  fprintf(file_name,"P83,");
    23151:  367:  if(type==keyword)
        -:  368:  {
     2337:  369:    fprintf(file_name,"P84,");
     2337:  370:    fprintf(stdout, "keyword,\"%s\".\n",tok);
        -:  371:  }
    23151:  372:  fprintf(file_name,"P85,");
    23151:  373:  if(type==spec_symbol)
        -:  374:  {
     4804:  375:    fprintf(file_name,"P86,");
     4804:  376:    print_spec_symbol(tok);
        -:  377:  }
    23151:  378:  fprintf(file_name,"P87,");
    23151:  379:  if(type==identifier)
        -:  380:  {
     2786:  381:    fprintf(file_name,"P88,");
     2786:  382:    fprintf(stdout, "identifier,\"%s\".\n",tok);
        -:  383:  }
    23151:  384:  fprintf(file_name,"P89,");
    23151:  385:  if(type==num_constant)
        -:  386:  {
     1253:  387:    fprintf(file_name,"P90,");
     1253:  388:    fprintf(stdout, "numeric,%s.\n",tok);
        -:  389:  }
    23151:  390:  fprintf(file_name,"P91,");
    23151:  391:  if(type==str_constant)
        -:  392:  {
     1388:  393:    fprintf(file_name,"P92,");
     1388:  394:    fprintf(stdout, "string,%s.\n",tok);
        -:  395:  }
    23151:  396:  fprintf(file_name,"P93,");
    23151:  397:  if(type==char_constant)
        -:  398:  {
      553:  399:    fprintf(file_name,"P94,");
      553:  400:    tok=tok+1;
      553:  401:    fprintf(stdout, "character,\"%s\".\n",tok);
        -:  402:  }
    23151:  403:  fprintf(file_name,"P95,");
    23151:  404:  if(type==end)
        -:  405:  {
     4055:  406:    fprintf(file_name,"P96,");
     4055:  407:    fprintf(stdout, "eof.\n");
        -:  408:  }
    23151:  409:}
        -:  410:
   172178:  411:int is_eof_token(tok)
        -:  412:token tok;
        -:  413:{ 
   172178:  414:  fprintf(file_name,"P97,");
   172178:  415:  if( *tok==EOF)
        -:  416:  {
    13683:  417:    fprintf(file_name,"P98,");
    13683:  418:    return(TRUE);  
        -:  419:  }
        -:  420:  else
        -:  421:  {
   158495:  422:    fprintf(file_name,"P99,");
   158495:  423:    return(FALSE);
        -:  424:  }
        -:  425:}
        -:  426:
    10030:  427:static int is_comment(ident)
        -:  428:token ident;
        -:  429:{
    10030:  430:  fprintf(file_name,"P100,");
    10030:  431:  if( (*ident) ==59 )   /* the char is 59   */
        -:  432:  {
     1922:  433:    fprintf(file_name,"P101,");
     1922:  434:    return(TRUE);
        -:  435:  }
        -:  436:  else
        -:  437:  {
     8108:  438:    fprintf(file_name,"P102,");
     8108:  439:    return(FALSE);
        -:  440:  }
        -:  441:}
        -:  442:
    23151:  443:static int is_keyword(str)
        -:  444:    token  str;
        -:  445:{ 
    23151:  446:  fprintf(file_name,"P103,");
    23151:  447:  if (!strcmp(str,"and") || !strcmp(str,"or") || !strcmp(str,"if") || 
    22012:  448:  	  !strcmp(str,"xor")||!strcmp(str,"lambda")||!strcmp(str,"=>"))
        -:  449:  {
     2337:  450:    fprintf(file_name,"P104,");
     2337:  451:    return(TRUE);
        -:  452:  }
        -:  453:  else
        -:  454:  {
    20814:  455:    fprintf(file_name,"P105,");
    20814:  456:    return(FALSE);
        -:  457:  }
        -:  458:}
        -:  459:
    10583:  460:static int is_char_constant(str)
        -:  461:    token str;
        -:  462:{
    10583:  463:  fprintf(file_name,"P106,");
    10583:  464:  if ((*str)=='#' && isalpha(*(str+1)))
        -:  465:  {
      553:  466:    fprintf(file_name,"P107,");
      553:  467:    return(TRUE);
        -:  468:  } 
        -:  469:  else
        -:  470:  {
    10030:  471:    fprintf(file_name,"P108,");
    10030:  472:    return(FALSE);
        -:  473:  }
        -:  474:}
        -:  475:
    13224:  476:static int is_num_constant(str)
        -:  477:    token  str;
        -:  478:{
    13224:  479:  int i=1;
    13224:  480:  fprintf(file_name,"P109,");
    13224:  481:  if ( isdigit(*str)) 
        -:  482:  {
     1638:  483:    fprintf(file_name,"P110,");
     2557:  484:    while ( *(str+i) != '\0' )   /* until meet token end sign */
        -:  485:    {
     1304:  486:      fprintf(file_name,"P111,");
     1304:  487:      if(isdigit(*(str+i)))
        -:  488:      {
      919:  489:        fprintf(file_name,"P112,");
      919:  490:        i++;
        -:  491:      }
        -:  492:      else
        -:  493:      {
      385:  494:        fprintf(file_name,"P113,");
      385:  495:        return(FALSE);
        -:  496:      }
        -:  497:    }                         /* end WHILE */
     1253:  498:    fprintf(file_name,"P114,");
     1253:  499:    return(TRUE);
        -:  500:  }
        -:  501:  else
        -:  502:  {
    11586:  503:    fprintf(file_name,"P115,");
    11586:  504:    return(FALSE);               /* other return FALSE */
        -:  505:  }
        -:  506:}
        -:  507:
    11971:  508:static int is_str_constant(str)
        -:  509:    token str;
        -:  510:{
    11971:  511:  int i=1;
    11971:  512:  fprintf(file_name,"P116,");
    11971:  513:  if ( *str =='"')
        -:  514:  {
     1563:  515:    fprintf(file_name,"P117,"); 
    21678:  516:    while (*(str+i)!='\0')  /* until meet the token end sign */
        -:  517:    {
    21503:  518:      fprintf(file_name,"P118,");
    21503:  519:      if(*(str+i)=='"')
        -:  520:      {
     1388:  521:        fprintf(file_name,"P119,");
     1388:  522:        return(TRUE);        /* meet the second '"'           */
        -:  523:      }
        -:  524:      else
        -:  525:      {
    20115:  526:        fprintf(file_name,"P120,");
    20115:  527:        i++;
        -:  528:      }     
        -:  529:    }               /* end WHILE */
      175:  530:    fprintf(file_name,"P121,");
      175:  531:    return(FALSE);
        -:  532:  }
        -:  533:  else
        -:  534:  {
    10408:  535:    fprintf(file_name,"P122,");
    10408:  536:    return(FALSE);       /* other return FALSE */
        -:  537:  }
        -:  538:}
        -:  539:
    16010:  540:static int is_identifier(str)
        -:  541:    token  str;
        -:  542:{
    16010:  543:  int i=1;
    16010:  544:  fprintf(file_name,"P123,");
    16010:  545:  if ( isalpha( *str) ) 
        -:  546:  {
     4412:  547:    fprintf(file_name,"P124,");
    22196:  548:    while(  *(str+i) !='\0' )   /* unti meet the end token sign */
        -:  549:    {
    19410:  550:      fprintf(file_name,"P125,");
    19410:  551:      if(isalpha(*(str+i)) || isdigit(*(str+i)))
        -:  552:      {
    17784:  553:        fprintf(file_name,"P126,");
    17784:  554:        i++;
        -:  555:      } 
        -:  556:      else
        -:  557:      {
     1626:  558:        fprintf(file_name,"P127,");
     1626:  559:        return(FALSE);
        -:  560:      }
        -:  561:    }      /* end WHILE */
     2786:  562:    fprintf(file_name,"P128,");
     2786:  563:    return(TRUE);
        -:  564:  }
        -:  565:  else
        -:  566:  {
    11598:  567:    fprintf(file_name,"P129,");
    11598:  568:    return(FALSE);
        -:  569:  }
        -:  570:}
        -:  571:
     1030:  572:static unget_error(fp)
        -:  573:character_stream *fp;
        -:  574:{
     1030:  575:  fprintf(file_name,"P130,");
     1030:  576:  fprintf(stdout,"It can not get charcter\n");
     1030:  577:}
        -:  578:
     4804:  579:static void print_spec_symbol(str)
        -:  580:token str;
        -:  581:{
     4804:  582:  fprintf(file_name,"P131,");
     4804:  583:  if (!strcmp(str,"("))
        -:  584:  {
      630:  585:    fprintf(file_name,"P132,");
      630:  586:    fprintf(stdout, "%s\n","lparen.");
      630:  587:    return;
        -:  588:  }
     4174:  589:  fprintf(file_name,"P133,"); 
     4174:  590:  if (!strcmp(str,")"))
        -:  591:  {
      690:  592:    fprintf(file_name,"P134,");
      690:  593:    fprintf(stdout, "%s\n","rparen.");
      690:  594:    return;
        -:  595:  }
     3484:  596:  fprintf(file_name,"P135,");
     3484:  597:  if (!strcmp(str,"["))
        -:  598:  {
      679:  599:    fprintf(file_name,"P136,");
      679:  600:    fprintf(stdout, "%s\n","lsquare.");
      679:  601:    return;
        -:  602:  }
     2805:  603:  fprintf(file_name,"P137,");
     2805:  604:  if (!strcmp(str,"]"))
        -:  605:  {
      736:  606:    fprintf(file_name,"P138,");
      736:  607:    fprintf(stdout, "%s\n","rsquare.");
      736:  608:    return;
        -:  609:  }
     2069:  610:  fprintf(file_name,"P139,");
     2069:  611:  if (!strcmp(str,"'"))
        -:  612:  {
      676:  613:    fprintf(file_name,"P140,");
      676:  614:    fprintf(stdout, "%s\n","quote.");
      676:  615:    return;
        -:  616:  }
     1393:  617:  fprintf(file_name,"P141,");
     1393:  618:  if (!strcmp(str,"`"))
        -:  619:  {
      707:  620:    fprintf(file_name,"P142,");
      707:  621:    fprintf(stdout, "%s\n","bquote.");
      707:  622:    return;
        -:  623:  }
      686:  624:  fprintf(file_name,"P143,");
      686:  625:  fprintf(stdout, "%s\n","comma.");
        -:  626:}
        -:  627:
   115442:  628:static int is_spec_symbol(str)
        -:  629:    token str;
        -:  630:{
   115442:  631:  fprintf(file_name,"P144,");
   115442:  632:  if (!strcmp(str,"("))
        -:  633:  {
     1862:  634:    fprintf(file_name,"P145,");  
     1862:  635:    return(TRUE);
        -:  636:  }
   113580:  637:  fprintf(file_name,"P146,");
   113580:  638:  if (!strcmp(str,")"))
        -:  639:  {
     2026:  640:    fprintf(file_name,"P147,");
     2026:  641:    return(TRUE);
        -:  642:  }
   111554:  643:  fprintf(file_name,"P148,");
   111554:  644:  if (!strcmp(str,"["))
        -:  645:  {
     2050:  646:    fprintf(file_name,"P149,");
     2050:  647:    return(TRUE);
        -:  648:  }
   109504:  649:  fprintf(file_name,"P150,");
   109504:  650:  if (!strcmp(str,"]"))
        -:  651:  {
     2192:  652:    fprintf(file_name,"P151,");
     2192:  653:    return(TRUE);
        -:  654:  }
   107312:  655:  fprintf(file_name,"P152,");
   107312:  656:  if (!strcmp(str,"'"))
        -:  657:  {
     2026:  658:    fprintf(file_name,"P153,");
     2026:  659:    return(TRUE);
        -:  660:  }
   105286:  661:  fprintf(file_name,"P154,");
   105286:  662:  if (!strcmp(str,"`"))
        -:  663:  {
     2108:  664:    fprintf(file_name,"P155,");
     2108:  665:    return(TRUE);
        -:  666:  }
   103178:  667:  fprintf(file_name,"P156,");
   103178:  668:  if (!strcmp(str,","))
        -:  669:  {
     2094:  670:    fprintf(file_name,"P157,");
     2094:  671:    return(TRUE);
        -:  672:  }
   101084:  673:  fprintf(file_name,"P158,");
   101084:  674:  return(FALSE);     /* others return FALSE */
        -:  675:}
